{
  "name": "opencv4nodejs",
  "version": "3.0.3",
  "description": "Asynchronous OpenCV 3.x API for node.js",
  "keywords": [
    "opencv",
    "cv",
    "computer vision",
    "detection",
    "recognition",
    "face",
    "gesture",
    "machine",
    "learning",
    "neural",
    "network",
    "async"
  ],
  "author": "justadudewhohacks",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/justadudewhohacks/opencv4nodejs"
  },
  "bugs": {
    "url": "https://github.com/justadudewhohacks/opencv4nodejs/issues"
  },
  "homepage": "https://github.com/justadudewhohacks/opencv4nodejs#readme",
  "main": "./lib/opencv4nodejs.js",
  "scripts": {
    "install": "node-gyp rebuild",
    "configure": "node-gyp configure",
    "build": "node-gyp configure build",
    "rebuild": "node-gyp rebuild",
    "clean": "node-gyp clean",
    "build-debug": "node-gyp rebuild --debug",
    "build-opencv3.0": "docker build -t opencv3.0 -f ./ci/opencv3.0/Dockerfile . &&docker run opencv3.0",
    "build-opencv3.0-contrib": "docker build -t opencv3.0-contrib -f ./ci/opencv3.0-contrib/Dockerfile . &&docker run opencv3.0-contrib",
    "build-opencv3.1": "docker build -t opencv3.1 -f ./ci/opencv3.1/Dockerfile . &&docker run opencv3.1",
    "build-opencv3.1-contrib": "docker build -t opencv3.1-contrib -f ./ci/opencv3.1-contrib/Dockerfile . &&docker run opencv3.1-contrib",
    "build-opencv3.2-contrib": "docker build -t opencv3.2-contrib -f ./ci/opencv3.2-contrib/Dockerfile . &&docker run opencv3.2-contrib",
    "build-opencv3.3": "docker build -t opencv3.3 -f ./ci/opencv3.3/Dockerfile . &&docker run opencv3.3",
    "build-opencv3.3-contrib": "docker build -t opencv3.3-contrib -f ./ci/opencv3.3-contrib/Dockerfile . &&docker run opencv3.3-contrib",
    "build-opencv3.4": "docker build -t opencv3.4 -f ./ci/opencv3.4/Dockerfile . &&docker run opencv3.4",
    "build-opencv3.4-contrib": "docker build -t opencv3.4-contrib -f ./ci/opencv3.4-contrib/Dockerfile . &&docker run opencv3.4-contrib",
    "build-opencv3.2-contrib-with-coverage": "docker build -t opencv3.2-contrib-with-coverage -f ./ci/opencv3.2-contrib-with-coverage/Dockerfile . &&docker run -v $PWD/ci/coverage-report:/test/coverage-report opencv3.2-contrib-with-coverage"
  },
  "gypfile": true,
  "dependencies": {
    "macro-inferno": "^0.2.1",
    "nan": "^2.7.0",
    "opencv-build": "0.0.3",
    "ws": "4.1.0"
  }
}
